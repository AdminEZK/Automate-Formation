#!/usr/bin/env python3
"""
Script pour modifier automatiquement les templates Word
Remplace les valeurs fixes par des variables dynamiques
"""

import os
from docx import Document
import shutil
from datetime import datetime

TEMPLATES_DIR = "Dossier exemple"
BACKUP_DIR = os.path.join(TEMPLATES_DIR, "backup_originaux")

def backup_templates():
    """Cr√©e une sauvegarde de tous les templates"""
    if not os.path.exists(BACKUP_DIR):
        os.makedirs(BACKUP_DIR)
        print(f"üìÅ Dossier de sauvegarde cr√©√© : {BACKUP_DIR}\n")
    
    templates = [
        "Modele Convocation formation 2020.docx",
        "Mod√®le Proposition de Formation_2.docx",
        "Mod√®le de convention simplifi√©e de formation 2020.docx",
        "Mod√®le Programme de formation 2020.docx",
        "Mod√®le Certificat de r√©alisation.docx",
    ]
    
    for template in templates:
        source = os.path.join(TEMPLATES_DIR, template)
        backup = os.path.join(BACKUP_DIR, template)
        
        if os.path.exists(source) and not os.path.exists(backup):
            shutil.copy2(source, backup)
            print(f"üíæ Sauvegarde : {template}")

def replace_in_paragraph(paragraph, replacements):
    """Remplace le texte dans un paragraphe en pr√©servant le style"""
    for old_text, new_text in replacements.items():
        if old_text in paragraph.text:
            # Remplacer dans chaque run pour pr√©server le style
            for run in paragraph.runs:
                if old_text in run.text:
                    run.text = run.text.replace(old_text, new_text)

def replace_in_table(table, replacements):
    """Remplace le texte dans un tableau"""
    for row in table.rows:
        for cell in row.cells:
            for paragraph in cell.paragraphs:
                replace_in_paragraph(paragraph, replacements)

def replace_in_document(doc, replacements):
    """Remplace le texte dans tout le document"""
    # Paragraphes
    for paragraph in doc.paragraphs:
        replace_in_paragraph(paragraph, replacements)
    
    # Tableaux
    for table in doc.tables:
        replace_in_table(table, replacements)
    
    # En-t√™tes
    for section in doc.sections:
        for paragraph in section.header.paragraphs:
            replace_in_paragraph(paragraph, replacements)
        for table in section.header.tables:
            replace_in_table(table, replacements)
    
    # Pieds de page
    for section in doc.sections:
        for paragraph in section.footer.paragraphs:
            replace_in_paragraph(paragraph, replacements)
        for table in section.footer.tables:
            replace_in_table(table, replacements)

def modifier_convocation():
    """Modifie le template de convocation"""
    template_name = "Modele Convocation formation 2020.docx"
    template_path = os.path.join(TEMPLATES_DIR, template_name)
    
    if not os.path.exists(template_path):
        print(f"‚ùå Template non trouv√© : {template_name}")
        return
    
    print(f"\nüìÑ Modification : {template_name}")
    
    try:
        doc = Document(template_path)
        
        replacements = {
            # Lieu et date
            'Saint-Malo': '{{organisme_ville}}',
            'le 27 septembre 2021': 'le {{date_aujourd_hui}}',
            
            # Participant
            '¬´ NOM / PRENOM ¬ª': '{{participant_nom_complet}}',
            
            # Tableau - Intitul√© formation
            'Renouvellement CACES R386 CAT√âGORIE 3B': '{{formation_titre}}',
            
            # Dur√©e
            '14': '{{formation_duree}}',
            
            # Dates (dans le tableau)
            '15/11/2019': '{{date_debut}}',
            '22/11/2019': '{{date_fin}}',
            
            # Horaires
            '8H30 -16H30': '{{horaire_debut}} - {{horaire_fin}}',
            
            # Lieu de formation
            'Entreprise MAHEY\n5, Impasse Grand Jardin\n35400 Saint Malo': '{{lieu}}',
        }
        
        replace_in_document(doc, replacements)
        
        doc.save(template_path)
        print(f"‚úÖ Convocation modifi√©e avec succ√®s")
        
    except Exception as e:
        print(f"‚ùå Erreur : {str(e)}")

def modifier_proposition():
    """Modifie le template de proposition de formation"""
    template_name = "Mod√®le Proposition de Formation_2.docx"
    template_path = os.path.join(TEMPLATES_DIR, template_name)
    
    if not os.path.exists(template_path):
        print(f"‚ùå Template non trouv√© : {template_name}")
        return
    
    print(f"\nüìÑ Modification : {template_name}")
    
    try:
        doc = Document(template_path)
        
        replacements = {
            # Titre
            'Nom de la formation': '{{formation_titre}}',
            'Nom du client': '{{entreprise_nom}}',
            
            # Section I - Contexte
            'Soci√©t√© FAST SUD': '{{entreprise_nom}}',
            '2 rue des Peupliers': '{{entreprise_adresse}}',
            '35 380 PLELAN-LE-GRAND': '{{entreprise_code_postal}} {{entreprise_ville}}',
            'Sp√©cialis√©e dans le secteur d\'activit√© de la restauration de type rapide': '{{entreprise_description}}',
            
            # Section II - Demande
            'XXXXXXXXle nom de la formationXXXXXXXXXXXX': '{{formation_titre}}',
            
            # Section III - Proposition
            '5 septembre 2022': '{{date_proposition}}',
            '8 septembre 2022': '{{date_entrevue}}',
            
            # Section IV - Objectifs
            'Mise en conformit√© r√©glementaire sur la conduite d\'engin ‚Ä¶‚Ä¶': '{{formation_objectifs}}',
            
            # Section V - Programme
            'R√¥le et comp√©tences du Ma√Ætre d\'apprentissage en entreprise': '{{formation_programme}}',
            
            # Section VI - Public
            'Public : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX': 'Public : {{formation_public_vise}}',
            'Pr√©requis : XXXXXXXXXXXXXXXXXXXXXXXXXX': 'Pr√©requis : {{formation_prerequis}}',
            
            # Section VII - Organisation
            'Pr√©sentiel en INTRA': '{{formation_modalite}}',
            'gilles.pichonnet@free.fr': '{{organisme_email}}',
            'Gilles PICHONNET': '{{organisme_representant_nom}}',
            
            # Dur√©e
            '14 heures, soit 2 jours.': '{{formation_duree}} heures',
            
            # Dates et lieu
            'A d√©finir d\'un commun accord.': 'Du {{date_debut}} au {{date_fin}}',
            'En intra dans vos locaux': '{{lieu}}',
            
            # Section IX - Prix
            '2 400‚Ç¨': '{{prix_total_ht}}',
            '480‚Ç¨': '{{tva}}',
            '2 880‚Ç¨': '{{prix_total_ttc}}',
            
            # Signature
            'Saint-Malo': '{{organisme_ville}}',
            'le 5 septembre 2024': 'le {{date_aujourd_hui}}',
            'Monsieur XXXXXXXXXX': '{{entreprise_representant_nom}}',
            'Titre : XXXXXXXXXX': '{{entreprise_representant_fonction}}',
            'Monsieur Gilles PICHONNET': '{{organisme_representant_nom}}',
            'Dirigeant Fondateur de PICHFORMATION': '{{organisme_representant_fonction}}',
        }
        
        replace_in_document(doc, replacements)
        
        doc.save(template_path)
        print(f"‚úÖ Proposition modifi√©e avec succ√®s")
        
    except Exception as e:
        print(f"‚ùå Erreur : {str(e)}")

def modifier_convention():
    """Modifie le template de convention"""
    template_name = "Mod√®le de convention simplifi√©e de formation 2020.docx"
    template_path = os.path.join(TEMPLATES_DIR, template_name)
    
    if not os.path.exists(template_path):
        print(f"‚ùå Template non trouv√© : {template_name}")
        return
    
    print(f"\nüìÑ Modification : {template_name}")
    
    try:
        doc = Document(template_path)
        
        # Remplacements g√©n√©riques pour la convention
        # Ces valeurs seront adapt√©es selon le contenu r√©el de votre template
        replacements = {
            # √Ä adapter selon votre template
            'PICHFORMATION': '{{organisme_raison_sociale}}',
            'Gilles PICHONNET': '{{organisme_representant_nom}}',
            'Saint-Malo': '{{organisme_ville}}',
        }
        
        replace_in_document(doc, replacements)
        
        doc.save(template_path)
        print(f"‚úÖ Convention modifi√©e avec succ√®s")
        
    except Exception as e:
        print(f"‚ùå Erreur : {str(e)}")

def modifier_programme():
    """Modifie le template de programme"""
    template_name = "Mod√®le Programme de formation 2020.docx"
    template_path = os.path.join(TEMPLATES_DIR, template_name)
    
    if not os.path.exists(template_path):
        print(f"‚ùå Template non trouv√© : {template_name}")
        return
    
    print(f"\nüìÑ Modification : {template_name}")
    
    try:
        doc = Document(template_path)
        
        replacements = {
            'PICHFORMATION': '{{organisme_nom}}',
            'Gilles PICHONNET': '{{organisme_representant_nom}}',
            'gilles.pichonnet@free.fr': '{{organisme_email}}',
            'Saint-Malo': '{{organisme_ville}}',
        }
        
        replace_in_document(doc, replacements)
        
        doc.save(template_path)
        print(f"‚úÖ Programme modifi√© avec succ√®s")
        
    except Exception as e:
        print(f"‚ùå Erreur : {str(e)}")

def modifier_certificat():
    """Modifie le template de certificat"""
    template_name = "Mod√®le Certificat de r√©alisation.docx"
    template_path = os.path.join(TEMPLATES_DIR, template_name)
    
    if not os.path.exists(template_path):
        print(f"‚ùå Template non trouv√© : {template_name}")
        return
    
    print(f"\nüìÑ Modification : {template_name}")
    
    try:
        doc = Document(template_path)
        
        replacements = {
            'PICHFORMATION': '{{organisme_raison_sociale}}',
            'Gilles PICHONNET': '{{organisme_representant_nom}}',
            'Saint-Malo': '{{organisme_ville}}',
        }
        
        replace_in_document(doc, replacements)
        
        doc.save(template_path)
        print(f"‚úÖ Certificat modifi√© avec succ√®s")
        
    except Exception as e:
        print(f"‚ùå Erreur : {str(e)}")

def main():
    print("üöÄ Modification automatique des templates Word")
    print("=" * 60)
    print()
    print("‚ö†Ô∏è  ATTENTION : Ce script va modifier vos templates Word.")
    print("   Une sauvegarde sera cr√©√©e dans 'backup_originaux/'")
    print()
    
    choice = input("Voulez-vous continuer ? (o/n) : ")
    
    if choice.lower() != 'o':
        print("‚ùå Op√©ration annul√©e")
        return
    
    print("\nüì¶ Cr√©ation des sauvegardes...")
    backup_templates()
    
    print("\nüîß Modification des templates...")
    
    # Modifier chaque template
    modifier_convocation()
    modifier_proposition()
    modifier_convention()
    modifier_programme()
    modifier_certificat()
    
    print("\n" + "=" * 60)
    print("‚úÖ Modification termin√©e !")
    print(f"üìÅ Les originaux sont sauvegard√©s dans : {BACKUP_DIR}")
    print("\nüí° Prochaines √©tapes :")
    print("   1. Ouvrez les templates modifi√©s pour v√©rifier")
    print("   2. Testez la g√©n√©ration avec : python test-document-generation.py")
    print("   3. Ajustez manuellement si n√©cessaire")

if __name__ == '__main__':
    main()
